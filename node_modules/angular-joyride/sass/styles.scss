@mixin triangle($size, $color, $direction) {
  $width: nth($size, 1);
  $height: nth($size, length($size));
  $foreground-color: nth($color, 1);
  $background-color: if(length($color) == 2, nth($color, 2), transparent);
  height: 0;
  width: 0;

  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {
    $width: $width / 2;
    $height: if(length($size) > 1, $height, $height/2);

    @if $direction == up {
      border-bottom: $height solid $foreground-color;
      border-left: $width solid $background-color;
      border-right: $width solid $background-color;
    } @else if $direction == right {
      border-bottom: $width solid $background-color;
      border-left: $height solid $foreground-color;
      border-top: $width solid $background-color;
    } @else if $direction == down {
      border-left: $width solid $background-color;
      border-right: $width solid $background-color;
      border-top: $height solid $foreground-color;
    } @else if $direction == left {
      border-bottom: $width solid $background-color;
      border-right: $height solid $foreground-color;
      border-top: $width solid $background-color;
    }
  } @else if ($direction == up-right) or ($direction == up-left) {
    border-top: $height solid $foreground-color;

    @if $direction == up-right {
      border-left:  $width solid $background-color;
    } @else if $direction == up-left {
      border-right: $width solid $background-color;
    }
  } @else if ($direction == down-right) or ($direction == down-left) {
    border-bottom: $height solid $foreground-color;

    @if $direction == down-right {
      border-left:  $width solid $background-color;
    } @else if $direction == down-left {
      border-right: $width solid $background-color;
    }
  } @else if ($direction == inset-up) {
    border-color: $background-color $background-color $foreground-color;
    border-style: solid;
    border-width: $height $width;
  } @else if ($direction == inset-down) {
    border-color: $foreground-color $background-color $background-color;
    border-style: solid;
    border-width: $height $width;
  } @else if ($direction == inset-right) {
    border-color: $background-color $background-color $background-color $foreground-color;
    border-style: solid;
    border-width: $width $height;
  } @else if ($direction == inset-left) {
    border-color: $background-color $foreground-color $background-color $background-color;
    border-style: solid;
    border-width: $width $height;
  }
}


@keyframes fade{
  0%{
    opacity: 0;
  }
}

.jr_container{
	display: none;
	background: white;
	width: 100%;
	max-width: 400px;
	position: absolute;
	z-index: 1010;
	box-shadow: 0 2px 8px rgba(0,0,0,0.3);
	border: 1px solid #FFFFFF;
	transition: opacity .3s, transform .3s;
	

	&:not(.jr_element){
		left: 0; 
		right: 0;
		margin: auto;
	}

	&.jr_element{
		width: 300px;
		&:after{
			content: "";
			position: absolute;
			margin: auto;
			
		}
		&.jr_pos_bottom{
			top: calc(100% + 15px);
		    left: -9999px;
		    right: -9999px;
		    margin: auto;
			&:after{
				left: 0;
				right: 0;
				bottom: 100%;
				@include triangle(25px, white, up);
			}
		}
		&.jr_pos_top{
		    bottom: calc(100% + 15px);
		    left: -9999px;
		    right: -9999px;
		    margin: auto;
			&:after{
				top: 100%;
				@include triangle(25px, white, down);
			}
		}
		&.jr_pos_left{
			top: 50%;
			transform: translateY(-50%);
		    right: calc(100% + 15px);
		    margin: auto;
			&:after{
				left: 100%;
				top: 0;
				bottom: 0;
				margin: auto;
				@include triangle(25px, white, right);
			}
		}
		&.jr_pos_right{
			top: 50%;
			transform: translateY(-50%);
		    left: calc(100% + 15px);
			&:after{
				right: 100%;
				top: 0;
				bottom: 0;
				margin: auto;
				@include triangle(25px, white, left);
			}
		}
	}
	////////PLACEMENT STYLES
	&.jr_pos_bottom{
		&:after{
			left: 0;
			right: 0;
			margin: auto;
			bottom: 100%;
			@include triangle(25px, white, up);
		}
	}

	&.jr_pos_top{
		&:after{
			left: 0;
			right: 0;
			margin: auto;
			top: 100%;
			@include triangle(25px, white, down);
		}
	}

	//////// START/END ANIMATIONS
	&.jr_start{
		display: block;
		opacity: 1;
	}
	&.jr_start-remove {
	    display: block;
	    opacity: 1;
	}
	&.jr_start-remove-active {
	    opacity: 0;
	}
	&.jr_start-add {
	    display: block;
	    opacity: 0;
	}
	&.jr_start-add-active {
		opacity: 1;
	}

	//////////// STEP TRANSITION ANIMATIONS
	&.jr_transition{
		opacity: 0;
	}
	&.jr_transition-add {
		opacity: 1;
		transform: translateY(0px);
	}
	&.jr_transition-add-active {
	    transform: translateY(-100px);
	    opacity: 0;
	}

	&.jr_transition-remove {
	    opacity: 0;
	    transform: translateY(-100px);
	}

	&.jr_transition-remove-active {
		opacity: 1;
	    transform: translateY(0px);
	}
	
	
	.jr_title{
		padding: 10px;
		// background: #28B39F;
		color: gray;
		margin: 0;
		font-size: 15px;
		border_bottom: 1px solid #F5F5F5;
	}
	.jr_content{
		padding: 10px;
		font-size: 13px;
		p{
			font-size: 13px;
		}
	}
	.jr_buttons{
		padding: 10px;
		&:after {
	        content: "";
	        display: table;
	        clear: both;
	    }
	}
	.jr_left_buttons{
		float: left;
	}
	.jr_right_buttons{
		float: right;
		.jr_button:first-child{
			margin-right: 5px;
		}
	}
	.jr_button{
	    background: #3E4150;
	    padding: 5px 15px;
	    color: white;
	    font-weight: 500;
	    font-size: 12px;
	    cursor: pointer;
	    &.disabled{
    	    background-color: #CCCCCC;
		    color: #868686;
	    }
	}
	.jr_skip{
		background-color: #C1C1C1;
		color: #525252;
	}
}
.jr_overlay{
	background: transparentize(black, .5);
	position: fixed;
	top: 0;
	bottom: 0;
	width: 100%;
	z-index: 1000;
	opacity: 0;
	display: none;
}

.jr_overlay_show{
	.jr_overlay{
		opacity: 1;
		display: block;
		animation: fade .3s both;
	}
}

.jr_target{
	position: relative;
	z-index: 1001;
    box-shadow: 0 0 6px rgba(0, 0, 0, 0.26);
}